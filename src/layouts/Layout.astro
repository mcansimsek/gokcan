---
import { useTranslations } from '../i18n/ui';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import { getLangFromUrl } from '../utils/i18n';

interface Props {
  title?: string;
  description?: string;
}

const { title, description } = Astro.props;
const url = Astro.url;
const lang = getLangFromUrl(url);
const t = useTranslations(lang);

const siteTitle = title ? `${title} | ${t('site.title')}` : t('site.title');
const siteDescription = description || t('site.description');
---

<!DOCTYPE html>
<html lang={lang} class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />
    <title>{siteTitle}</title>
    <meta name="description" content={siteDescription} />
    <meta property="og:title" content={siteTitle} />
    <meta property="og:description" content={siteDescription} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta name="generator" content={Astro.generator} />
  </head>
  <body class="min-h-screen flex flex-col bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300">
    <Header />
    <main class="flex-grow w-full">
      <slot />
    </main>
    <Footer />
    <script>
      // Check for dark mode preference
      const themeToggle = () => {
        if (localStorage.theme === 'dark' || (!('theme' in localStorage) && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
          document.documentElement.classList.add('dark');
        } else {
          document.documentElement.classList.remove('dark');
        }
      };
      
      themeToggle();
      document.addEventListener('themeToggle', themeToggle);
    </script>
  </body>
</html>
